{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'http://localhost:5000/api';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 10000\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor to handle auth errors\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    window.location.href = '/';\n  }\n  return Promise.reject(error);\n});\nexport const authAPI = {\n  login: credentials => api.post('/auth/login', credentials),\n  register: userData => api.post('/auth/register', userData),\n  verifyEmail: token => api.post('/auth/verify-email', {\n    token\n  })\n};\nexport const userAPI = {\n  getProfile: () => api.get('/user/profile'),\n  updateProfile: data => api.put('/user/profile', data),\n  getPotentialMatches: () => api.get('/user/potential-matches'),\n  getSmartMatches: () => api.get('/user/smart-matches'),\n  performAction: (targetUserId, action) => api.post('/user/action', {\n    targetUserId,\n    action\n  }),\n  uploadPhoto: formData => api.post('/user/upload-photo', formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  }),\n  getMatches: () => api.get('/user/matches'),\n  blockUser: userId => api.post('/user/block', {\n    userId\n  })\n};\nexport const messageAPI = {\n  sendMessage: (receiverId, content) => api.post('/messages', {\n    receiverId,\n    content\n  }),\n  getMessages: userId => api.get(`/messages/${userId}`)\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","timeout","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","authAPI","login","credentials","post","register","userData","verifyEmail","userAPI","getProfile","get","updateProfile","data","put","getPotentialMatches","getSmartMatches","performAction","targetUserId","action","uploadPhoto","formData","getMatches","blockUser","userId","messageAPI","sendMessage","receiverId","content","getMessages"],"sources":["D:/UohDating/university-dating-app/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = 'http://localhost:5000/api';\r\n\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  timeout: 10000\r\n});\r\n\r\n// Request interceptor to add auth token\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor to handle auth errors\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response?.status === 401) {\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('user');\r\n      window.location.href = '/';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport const authAPI = {\r\n  login: (credentials) => api.post('/auth/login', credentials),\r\n  register: (userData) => api.post('/auth/register', userData),\r\n  verifyEmail: (token) => api.post('/auth/verify-email', { token })\r\n};\r\n\r\nexport const userAPI = {\r\n  getProfile: () => api.get('/user/profile'),\r\n  updateProfile: (data) => api.put('/user/profile', data),\r\n  getPotentialMatches: () => api.get('/user/potential-matches'),\r\n  getSmartMatches: () => api.get('/user/smart-matches'),\r\n  performAction: (targetUserId, action) => api.post('/user/action', { targetUserId, action }),\r\n  uploadPhoto: (formData) => api.post('/user/upload-photo', formData, {\r\n    headers: { 'Content-Type': 'multipart/form-data' }\r\n  }),\r\n  getMatches: () => api.get('/user/matches'),\r\n  blockUser: (userId) => api.post('/user/block', { userId })\r\n};\r\n\r\nexport const messageAPI = {\r\n  sendMessage: (receiverId, content) => api.post('/messages', { receiverId, content }),\r\n  getMessages: (userId) => api.get(`/messages/${userId}`)\r\n};\r\n\r\nexport default api;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}